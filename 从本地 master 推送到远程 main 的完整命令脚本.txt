好的，我帮你整理一份完整、针对 Windows + PortableGit 的 GitHub 推送指导手册，涵盖从本地仓库初始化、提交、处理远程分支差异，到成功推送到 GitHub 的全过程。

📘 GitHub 推送完整指导手册（Windows + PortableGit）
1️⃣ 准备工作

下载 PortableGit

官方地址：Git for Windows

解压到任意目录，例如：C:\PortableGit\

启动 Git Bash

双击 git-bash.exe

推荐在项目目录右键 → “Git Bash Here”

配置全局用户名和邮箱（第一次使用必做）

git config --global user.name "你的名字"
git config --global user.email "你的邮箱@example.com"

2️⃣ 创建本地 Git 仓库

进入你的项目目录，例如：

cd "C:/Users/baiyun/Downloads/nat64套壳版混淆"


初始化 Git 仓库：

git init


查看当前分支：

git branch


新版本 Git 默认分支叫 main

老版本或部分配置可能叫 master

3️⃣ 添加文件并提交
git add .
git commit -m "Initial commit"


⚠️ 必须至少有一次提交，否则无法推送

4️⃣ 添加远程仓库

假设 GitHub 仓库 URL：https://github.com/chongyingbao/nat64-shel.git

git remote add origin https://github.com/chongyingbao/nat64-shel.git


验证远程：

git remote -v

5️⃣ 同步远程仓库（防止分歧）

如果 GitHub 仓库是新建的空仓库，直接跳到第 6 步。
如果远程有 README 或 LICENSE，需要先拉取：

git pull origin main --allow-unrelated-histories --no-rebase


如果出现冲突，按提示编辑冲突文件，然后：

git add <冲突文件>
git commit -m "Resolve merge conflicts"

6️⃣ 推送到 GitHub
本地分支与远程分支同名
git push -u origin main

本地分支是 master，远程是 main
git push -u origin master:main


⚠️ 第一次推送需加 -u 建立跟踪关系，以后可直接用 git push

7️⃣ 可选：统一分支命名

为了和 GitHub 默认 main 分支一致：

git branch -m master main
git push -u origin main


以后直接使用：

git add .
git commit -m "更新说明"
git push
git pull

8️⃣ HTTPS 与 SSH 注意事项
HTTPS

2021 年后 GitHub 不支持账号密码登录

必须使用 Personal Access Token (PAT) 替代密码

生成地址：GitHub → Settings → Developer settings → Personal Access Tokens → Tokens (classic)

SSH

生成密钥：

ssh-keygen -t rsa -b 4096 -C "your_email@example.com"


复制公钥 id_rsa.pub 到 GitHub → Settings → SSH and GPG keys → New SSH key

推送时用 SSH URL（git@github.com:用户名/仓库.git）

9️⃣ 常见错误与解决
错误提示	原因	解决方法
src refspec master does not match any	本地无提交或分支名不对	执行 git add . && git commit -m "xxx"，确认分支名
Updates were rejected because the remote contains work	本地与远程有不同历史	git pull origin main --allow-unrelated-histories --no-rebase 合并
Permission denied (publickey)	SSH key 未配置	添加 SSH key 到 GitHub
HTTPS 推送需要密码	GitHub 不再支持密码	使用 Personal Access Token

✅ 总结流程

初始化本地仓库 → git init

添加文件并提交 → git add . && git commit -m "xxx"

添加远程仓库 → git remote add origin <URL>

拉取远程分支并合并 → git pull origin main --allow-unrelated-histories --no-rebase

推送到 GitHub → git push -u origin master:main 或 git push -u origin main

可选：统一本地分支名为 main

我可以帮你再写一个 “一条命令搞定整个流程的 Windows 脚本”，从初始化到推送全部自动化，免去每步手动操作。

你希望我写吗？